-- 2-bit shift register
-- https://youtu.be/fcVOEW9cKq8?si=QE8VDh6jb8jodSjH

MODULE main

VAR
    bit1 : boolean;
    bit2 : boolean;
    state : {a,B,C,D};
    input : boolean;

ASSIGN
    init(state) := a;
    init(bit1) := FALSE;
    init(bit2) := FALSE;
    next(state) := case
        state = a & input = TRUE : B;
        state = a & input = FALSE : a;
        state = B & input = TRUE : D;
        state = B & input = FALSE : C;
        state = C & input = TRUE : B;
        state = C & input = FALSE : a;
        state = D & input = TRUE : D;
        state = D & input = FALSE : C;
        esac;
    next(bit1) := case
        state = a & input = TRUE : TRUE;
        state = a & input = FALSE : FALSE;
        state = B & input = TRUE : TRUE;
        state = B & input = FALSE : FALSE;
        state = C & input = TRUE : TRUE;
        state = C & input = FALSE : FALSE;
        state = D & input = TRUE : TRUE;
        state = D & input = FALSE : FALSE;
        esac;
    next(bit2) := case
        state = a & input = TRUE : FALSE;
        state = a & input = FALSE : FALSE;
        state = B & input = TRUE : TRUE;
        state = B & input = FALSE : TRUE;
        state = C & input = TRUE : FALSE;
        state = C & input = FALSE : FALSE;
        state = D & input = TRUE : TRUE;
        state = D & input = FALSE : TRUE;
        esac;

LTLSPEC
    G(bit1 -> X bit2)
